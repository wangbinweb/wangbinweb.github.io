<!doctype html>
<html lang="zh">
<head>
<meta charset="utf-8">
<title>VIM替换模式总结</title>
<meta name="description" content="沙风的博客">
<meta name="author" content="shafeng">
<link rel="stylesheet" href="../css/styles.css">
<!--[if it IE 9]>
<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
<![endif]-->
</head>
<body>
    <section id="container">
        <section id="posts">
            <article>
                <h2>VIM替换模式总结</h2>
                <div class="meta">written in 20120909. Tag:<a href="../archive/share1.htm">资源共享</a></div>
                <p>VIM中常用的替换模式总结。</p>
<p>1，简单替换表达式</p>
<p>搜索并替换。输入:[range]s/from/to/[flags]命令可以搜索匹配的字符串并且替换为指定的 字符串。这是一个稍微复杂的命令。其中[range]是一个可选项，用来指定搜索替换的范围。[flags]也是一个可选项，用来指定搜索替换的处理方 式。所以这个命令的简单形式是:s/from/to/。<br />
搜索替换的范围。如果没有指定范围，则只在当前行进行搜索替换。<br />
在所有行进行搜索替换。范围符号%表示在所有行进行搜索替换。:%s/from/to/就是在全文查找from并替换为to。<br />
在指定的行上进行搜索替换。:1,50s/from/to/表示在第1行和第50行之间（包括1和50行）进行搜索和替换。:45s/from/to/表示仅仅在第45行进行搜索和替换。而"1,$"行号范围和“%“是等价的。</p>
<p>[flags]有四个如下选项<br />
[c,e,g,i]<br />
c	confirm，每次替換前會詢問。<br />
e	不顯示 error。<br />
g	globe，不詢問，整行替換。<br />
i	ignore 不分大小寫。</p>
<p>g 大概都是要加的，否則只會替換每一行的第一個符合字串。可以合起來用，如 cgi，表示不分大小寫，整行替換，替換前要詢問是否替換。<br />
[實例] :%s/Edwin/Edward/g<br />
這樣整篇文章的 Edwin 就會替換成 Edward。</p>
<p>计算有多少个查找关键字：<br />
:%s/pattern/&/gn<br />
其中pattern是查找关键字<br />
"&"代表前面用来查找的关键字<br />
"n"代表只返回匹配的次数和行数，不作替换。</p>
<p>替换命令可以在全文中用一个单词替换另一个单词：</p>
<p>:%s/four/4/g</p>
<p>“%” 范围前缀表示在所有行中执行替换。最后的 “g” 标记表示替换行中的所有匹配点。如果仅仅对当前行进行操作，那么只要去掉%即可</p>
<p>如果你有一个象 “thirtyfour” 这样的单词，上面的命令会出错。这种情况下，这个单词会被替换成”thirty4″。要解决这个问题，用 “\<<br />
:%s/\<four/4/g</p>
<p>显然，这样在处理 “fourty” 的时候还是会出错。用 “\>” 来解决这个问题（全词匹配）：</p>
<p>:%s/\<four\>/4/g</p>
<p>如果你在编码，你可能只想替换注释中的 “four”，而保留代码中的。由于这很难指定，可以在替换命令中加一个 “c” 标记，这样，Vim 会在每次替换前提示你：</p>
<p>:%s/\<four\>/4/gc</p>
<p>2，删除多余的空格</p>
<p>要删除这些每行后面多余的空格，可以执行如下命令：</p>
<p>:%s/\s\+$//</p>
<p>命令前面指明范围是 “%”，所以这会作用于整个文件。”substitute” 命令的匹配模式是</p>
<p>“\s\+$”。这表示行末（$）前的一个或者多个（\+）空格（\s）。替换命令的 “to” 部分是空的：”//”。这样就会删除那些匹配的空白字符。</p>
<p>3，匹配重复性模式</p>
<p>星号项 “*” 规定在它前面的项可以重复任意次。因此:</p>
<p>/a*</p>
<p>匹 配 “a”，”aa”，”aaa”，等等。但也匹配 “” (空字串)，因为零次也包含在内。星号 “*” 仅仅应用于那个紧邻在它前面的项。因此 “ab*” 匹配 “a”，”ab”，”abb”,”abbb”，等等。如要多次重复整个字符串，那么该字符串必须被组成一个项。组成一项的方法就是在它前面加 “\(”，后面加 “\)”。因此这个命令:</p>
<p>/\(ab\)*</p>
<p>匹配: “ab”，”abab”，”ababab”，等等。而且也匹配 “”。</p>
<p>要避免匹配空字串，使用 “\+”。这表示前面一项可以被匹配一次或多次。</p>
<p>/ab\+</p>
<p>匹配 “ab”，”abb”，”abbb”，等等。它不匹配 后面没有跟随 “b” 的 “a”。</p>
<p>要匹配一个可选项，用 “\=”。 例如:</p>
<p>/folders\=</p>
<p>匹配 “folder” 和 “folders”。</p>
<p>4，指定重复次数</p>
<p>要匹配某一项的特定次数重复，使用 “\{n,m}” 这样的形式。其中 “n” 和 “m” 都是数字。在它前面的那个项将被重复 “n” 到 “m” 次 (|inclusive| 包含 “n” 和 “m”)。例如:</p>
<p>/ab\{3,5}</p>
<p>匹配 “abbb”，”abbbb” 以及 “abbbbb”。</p>
<p>当 “n” 省略时，被默认为零。当 “m” 省略时，被默认为无限大。当 “,m” 省略时，就表示重复正好 “n” 次。例如:</p>
<p>模式 匹配次数 </p>
<p>\{,4} 0，1，2，3 或 4</p>
<p>\{3,} 3，4，5，等等</p>
<p>\{0,1} 0 或 1，同 \=</p>
<p>\{0,} 0 或 更多，同 *</p>
<p>\{1,} 1 或 更多，同 \+</p>
<p>\{3} 3</p>
<p>5，多选一匹配</p>
<p>在一个查找模式中，”或” 运算符是 “\|”。例如:</p>
<p>/foo\|bar</p>
<p>这个命令匹配了 “foo” 或 “bar”。更多的抉择可以连在后面:</p>
<p>/one\|two\|three</p>
<p>匹配 “one”，”two” 或 “three”。</p>
<p>如要匹配其多次重复，那么整个抉择结构须置于 “\(” 和 “\)” 之间:</p>
<p>/\(foo\|bar\)\+</p>
<p>这个命令匹配 “foo”，”foobar”，”foofoo”，”barfoobar”，等等。</p>
<p>再举个例子:</p>
<p>/end\(if\|while\|for\)</p>
<p>这个命令匹配 “endif”，”endwhile” 和 “endfor”。</p>
<p>============================================================</p>
<p>:g/s1/s/s2/s3/g<br />
第一个g表示对每一个包括s1的行都进行替换，s表示查询或替换，s2是要被查询或替换的字符串，他可以和s1相同（如果相同的话用//代替），s3是替换字符串。</p>
<p>:g/s1/d<br />
表示删除包含s1关键字的所有行</p>
<p>:g!/s1/s/s2/s3/g<br />
其中!表示不包含s1关键字</p>
<p>=============================================</p>
<p>|/\s| \s \s 空白字符；<br />
|/\S| \S \S 非空白字符：和\s 相反<br />
|/\d| \d \d 数字: [0-9]<br />
|/\D| \D \D 非数字: [^0-9]<br />
|/\x| \x \x 十六进制数字: [0-9A-Fa-f]<br />
|/\X| \X \X 非十六进制字符: [^0-9A-Fa-f]<br />
|/\o| \o \o 八进制字符: [0-7]<br />
|/\O| \O \O 非八进制字符: [^0-7]<br />
|/\w| \w \w 单词字符: [0-9A-Za-z_]<br />
|/\W| \W \W 非单词字符: [^0-9A-Za-z_]<br />
|/\h| \h \h 单词首字符: [A-Za-z_]<br />
|/\H| \H \H 非单词首字符: [^A-Za-z_]<br />
|/\a| \a \a 英文字母字符: [A-Za-z]<br />
|/\A| \A \A 非英文字母字符: [^A-Za-z]<br />
|/\l| \l \l 小写字符: [a-z]<br />
|/\L| \L \L 非小写字符: [^a-z]<br />
|/\u| \u \u 大写字符: [A-Z]<br />
|/\U| \U \U 非大写字符 [^A-Z]<br />
|/\_| \_x \_x 其中 x 可以是以上任意一个字符：包括行尾的字符类</p>
<p>------------------------------------------------------------------------------</p>
<p>|/\e| \e \e <Esc><br />
|/\t| \t \t <Tab><br />
|/\r| \r \r <CR><br />
|/\b| \b \b <BS><br />
|/\n| \n \n 行尾 </p>
<p>------------------------------------------------------------------------------</p>
<p>|/^| ^ ^ 行首 (在模式起始) |/zero-width|<br />
|/\^| \^ \^ 字符 '^'<br />
|/\_^| \_^ \_^ 行首 (用于任何地方) |/zero-width|<br />
|/$| $ $ 行尾 (在模式结尾) |/zero-width|<br />
|/\$| \$ \$ 字符 '$'<br />
|/\_$| \_$ \_$ 行尾 (用于任何地方) |/zero-width|<br />
|/.| . \. 任何单个字符 (不包括行尾)<br />
|/\_.| \_. \_. 任何单个字符，包括行尾<br />
|/\< zero-widthbr>|/\>| \> \> 一个单词的结尾 |/zero-width|<br />
|/\zs| \zs \zs 任何字符，设定匹配起始<br />
|/\ze| \ze \ze 任何字符，设定匹配结尾<br />
|/\%^| \%^ \%^ 文件首 |/zero-width| *E71*<br />
|/\%$| \%$ \%$ 文件尾 |/zero-width|<br />
|/\%#| \%# \%# 光标位置 |/zero-width| </p>
<p>=======================================================</p>
<p>:%s/\d\@< ddd>\)\@=/,/g</p>
<p>使用到的语法点包括：<br />
1）零宽断言\@=与负向零宽断言\@<br />
2）在所有行进行替换:%s，在当前行进行替换:s，在当前行所有未匹配文本中替换/g<br />
3）因为零宽断言匹配的只是位置，所以/g可以为数值添加多个“,”。<br />
4）\(\(\d\d\d\)\+\>\)表明从匹配点到数值的结尾这个区间内，一共有3的倍数个数字。<br />
5）\d\@< ddd>\)\@=表明数值在匹配点前面有数字\d\@<br />
:%s/\d\@=\(\(\d\d\d\)\+\d\@!\)\@=/,/g</p>
<p>翻译过来就是，如果某个匹配点的前面是数字，匹配点和数值最后一个非数字点之间，有3的倍数个数字，那么就在这个匹配点处，加上","</p>
<p>2. 贪婪与懒惰</p>
<p>默认情况下，Vim使用贪婪模式进行匹配，也就是尽可能多地吃进字符。比如使用/a.*b可以匹配axbxb中的axbxb。如果指向匹配axb，那么应该将*替换为\{-}，即/a.\{-}b，表示尽可能少地吃进字符。</p>
<p>=======================================================================</p>
<p>完整详解：<br />
<a href="http://man.chinaunix.net/newsoft/vi/doc/pattern.html" title="VIM REFERENCE MANUAL" target="_blank">VIM REFERENCE MANUAL</a></p>
<p>

</p>
                <ul>
                    <li>
                    <a href="http://www.douban.com/group/shafeng.cn/" target="_blank"><img src="../image/douban-group.jpg"></a></li><li>
                    <a href="http://www.douban.com/group/shafeng.cn/" target="_blank">评论或留言</a></li>
                </ul>
            </article>
            <nav>
                <ul>
                    <li>
                    <a href="../">首页</a></li><li>
                    <a href="../archive/index.htm">存档</a></li><li>
                    <a href="../about.htm">关于</a></li><li>
                    <a href="../link.htm">友情链接</a></li>
                </ul>
            </nav>
            <footer>
            </footer>
        </section>
        <section id="sidebar">
        <div id="logo"><a href="../"></a></div>
        </section>
    </section>
</body>
</html>
